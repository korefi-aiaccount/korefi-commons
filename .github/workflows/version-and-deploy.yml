name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: [main]

permissions:
  contents: write    

jobs:
  lint:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install uv
        run: python -m pip install uv
      - name: Create venv
        run: uv venv
      - name: Activate venv and run linter
        run: |
          . .venv/bin/activate
          make ruff

  test:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install uv
        run: python -m pip install uv
      - name: Create venv
        run: uv venv
      - name: Activate venv, install, and test
        run: |
          . .venv/bin/activate
          make install
          make coverage

  increment-version:
    if: >
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
      || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    name: Create SemVer Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout merged commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
          fetch-depth: 0
          lfs: true
          persist-credentials: true  # âœ… ensures GITHUB_TOKEN is used for push/tag

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "noreply@github.com"

      - name: Make semver script executable
        run: chmod +x semver.sh

      - name: Create and push version tag
        run: |
          git fetch --tags --force --prune
          ./semver.sh

      - name: Get the new tag
        id: get_tag
        run: |
          NEW_TAG=$(git describe --tags --abbrev=0)
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New tag created: $NEW_TAG"

    outputs:
      version: ${{ steps.get_tag.outputs.new_tag }}

